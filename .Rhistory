# install packages
install.packages("flextable")
install.packages("GGally")
install.packages("ggraph")
install.packages("igraph")
install.packages("Matrix")
install.packages("network")
install.packages("quanteda")
install.packages("sna")
install.packages("tidygraph")
install.packages("tidyverse")
install.packages("tm")
install.packages("tibble")
install.packages("quanteda.textplots")
# install klippy for copy-to-clipboard button in code chunks
install.packages("remotes")
remotes::install_github("rlesur/klippy")
# activate packages
library(flextable)
library(GGally)
library(ggraph)
library(gutenbergr)
library(igraph)
library(Matrix)
library(network)
library(quanteda)
library(sna)
library(tidygraph)
library(tidyverse)
library(tm)
library(tibble)
# activate klippy for copy-to-clipboard button
klippy::klippy()
# load data
net_dat <- read.delim("https://slcladal.github.io/data/romeo_tidy.txt", sep = "\t")
View(net_dat)
net_cmx <- crossprod(table(net_dat[1:2]))
diag(net_cmx) <- 0
net_df <- as.data.frame(net_cmx)
# create a document feature matrix
net_dfm <- quanteda::as.dfm(net_df)
# create feature co-occurrence matrix
net_fcm <- quanteda::fcm(net_dfm, tri = F)
# inspect data
head(net_fcm)
quanteda.textplots::textplot_network(
x = net_fcm,                    # a fcm or dfm object
min_freq = 0.5,                   # frequency count threshold or proportion for co-occurrence frequencies (default = 0.5)
edge_alpha = 0.5,                 # opacity of edges ranging from 0 to 1.0 (default = 0.5)
edge_color = "gray",            # color of edges that connect vertices (default = "#1F78B4")
edge_size = 2,                    # size of edges for most frequent co-occurrence (default = 2)
# calculate the size of vertex labels for the network plot
vertex_labelsize = net_dfm %>%
# convert the dfm object to a data frame
quanteda::convert(to = "data.frame") %>%
# exclude the 'doc_id' column
dplyr::select(-doc_id) %>%
# calculate the sum of row values for each row
rowSums() %>%
# apply the natural logarithm to the resulting sums
log(),
vertex_color = "#4D4D4D",         # color of vertices (default = "#4D4D4D")
vertex_size = 2                   # size of vertices (default = 2)
)
dados = fetch_datasus(year_start = 2000,
year_end = 2005,
uf = "MG",
information_system = "SIM-DO")
library(microdatasus)
library(dplyr)
library(tidyverse)
dados = fetch_datasus(year_start = 2000,
year_end = 2005,
uf = "MG",
information_system = "SIM-DO")
saveRDS(dados, file = "data/dados.rds")
start_time <- Sys.time()
dados <- readRDS("data/dados.rds")
end_time <- Sys.time()
end_time - start_time
library(microdatasus)
library(dplyr)
library(tidyverse)
start_time <- Sys.time()
dados <- readRDS("data/dados.rds")
end_time <- Sys.time()
end_time - start_time
View(dados)
library(msa)
library("msa")
install.packages("msa")
BiocManager::install("msa")
install.packages(microdatasus)
install.packages("microdatasus")
BiocManager::install("microdatasus")
